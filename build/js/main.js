!function(){var e=angular.module("app",["ngAnimate"]);e.controller("TabController",["$scope",function(e){e.phoneScreens=[{title:"About",img:"img/1.png",description:"Amlgam is a messaging app that connects user with his lovely messengers."},{title:"Switching",img:"img/2.png",description:"We want Amlgam to be simple for everybody. So now switching is 2 taps, no more."},{title:"Custom answers",img:"img/3.png",description:"To be competitive is to be fast. Now you can use your custom messages for answering."}],e.direction="left",e.currentIndex=0,e.setCurrentSlideIndex=function(n){e.direction=n>e.currentIndex?"left":"right",e.currentIndex=n},e.isCurrentSlideIndex=function(n){return e.currentIndex===n}}]).animation(".slide-animation",function(){var e=0;return console.log(window.innerWidth),e=window.innerWidth>710?281:234,{beforeAddClass:function(n,i,t){var o=n.scope();if("ng-hide"==i){var r=n.parent().width();"right"!==o.direction&&(r=-r),TweenMax.fromTo(n,.5,{left:0},{left:-e,"z-index":-3,onComplete:t})}else t()},removeClass:function(n,i,t){var o=n.scope();if("ng-hide"==i){n.removeClass("ng-hide");var r=n.parent().width();"right"===o.direction&&(r=-r),TweenMax.fromTo(n,.5,{left:e,"z-index":-2},{left:0,onComplete:t})}else t()}}}),e.controller("EmailController",["$scope",function(e){function n(e){mixpanel.people.set({$email:e,$last_login:new Date})}e.user=null;var i="123456789";if(!t)var t=0;for(var o=0;10>o;o++)t+=i.charAt(Math.floor(Math.random()*i.length));t&&mixpanel.identify(t),e.addUser=function(){e.user&&n(e.user)}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJwaG9uZVNjcmVlbnMiLCJ0aXRsZSIsImltZyIsImRlc2NyaXB0aW9uIiwiZGlyZWN0aW9uIiwiY3VycmVudEluZGV4Iiwic2V0Q3VycmVudFNsaWRlSW5kZXgiLCJpbmRleCIsImlzQ3VycmVudFNsaWRlSW5kZXgiLCJhbmltYXRpb24iLCJ3aWR0aCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiYmVmb3JlQWRkQ2xhc3MiLCJlbGVtZW50IiwiY2xhc3NOYW1lIiwiZG9uZSIsInNjb3BlIiwiZmluaXNoUG9pbnQiLCJwYXJlbnQiLCJUd2Vlbk1heCIsImZyb21UbyIsImxlZnQiLCJ6LWluZGV4Iiwib25Db21wbGV0ZSIsInJlbW92ZUNsYXNzIiwic3RhcnRQb2ludCIsInNlbmRNaXhQYW5lbCIsIm5ld1VzZXIiLCJtaXhwYW5lbCIsInBlb3BsZSIsInNldCIsIiRlbWFpbCIsIiRsYXN0X2xvZ2luIiwiRGF0ZSIsInVzZXIiLCJwb3NzaWJsZSIsInVuaXF1ZSIsImkiLCJjaGFyQXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJpZGVudGlmeSIsImFkZFVzZXIiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0ksR0FBSUEsR0FBTUMsUUFBUUMsT0FBTyxPQUFRLGFBQ2pDRixHQUFJRyxXQUFXLGlCQUFpQixTQUFXLFNBQVVDLEdBRWpEQSxFQUFPQyxlQUNIQyxNQUFPLFFBQ1BDLElBQUssWUFDTEMsWUFBYSw2RUFFYkYsTUFBTyxZQUNQQyxJQUFLLFlBQ0xDLFlBQWEsb0ZBRWJGLE1BQU8saUJBQ1BDLElBQUssWUFFTEMsWUFBYSx5RkFFakJKLEVBQU9LLFVBQVksT0FDbkJMLEVBQU9NLGFBQWUsRUFFdEJOLEVBQU9PLHFCQUF1QixTQUFVQyxHQUNwQ1IsRUFBT0ssVUFBYUcsRUFBUVIsRUFBT00sYUFBZ0IsT0FBUyxRQUM1RE4sRUFBT00sYUFBZUUsR0FHMUJSLEVBQU9TLG9CQUFzQixTQUFVRCxHQUNuQyxNQUFPUixHQUFPTSxlQUFpQkUsTUFJbENFLFVBQVUsbUJBQW9CLFdBQzNCLEdBQUlDLEdBQU8sQ0FLWCxPQUpBQyxTQUFRQyxJQUFJQyxPQUFPQyxZQUVmSixFQURBRyxPQUFPQyxXQUFhLElBQ1osSUFDQyxLQUVUQyxlQUFnQixTQUFVQyxFQUFTQyxFQUFXQyxHQUMxQyxHQUFJQyxHQUFRSCxFQUFRRyxPQUVwQixJQUFpQixXQUFiRixFQUF3QixDQUN4QixHQUFJRyxHQUFjSixFQUFRSyxTQUFTWCxPQUNaLFdBQXBCUyxFQUFNZixZQUNMZ0IsR0FBZUEsR0FFbkJFLFNBQVNDLE9BQU9QLEVBQVMsSUFBTVEsS0FBSyxJQUFLQSxNQUFPZCxFQUFNZSxVQUFVLEdBQUlDLFdBQVlSLFFBR2hGQSxNQUdSUyxZQUFhLFNBQVVYLEVBQVNDLEVBQVdDLEdBQ3ZDLEdBQUlDLEdBQVFILEVBQVFHLE9BRXBCLElBQWlCLFdBQWJGLEVBQXdCLENBQ3hCRCxFQUFRVyxZQUFZLFVBRXBCLElBQUlDLEdBQWFaLEVBQVFLLFNBQVNYLE9BQ1gsV0FBcEJTLEVBQU1mLFlBQ0x3QixHQUFjQSxHQUVsQk4sU0FBU0MsT0FBT1AsRUFBUyxJQUFPUSxLQUFNZCxFQUFNZSxVQUFVLEtBQU9ELEtBQU0sRUFBR0UsV0FBWVIsUUFHbEZBLFNBTXBCdkIsRUFBSUcsV0FBVyxtQkFBb0IsU0FBVSxTQUFVQyxHQVduRCxRQUFTOEIsR0FBYUMsR0FDbEJDLFNBQVNDLE9BQU9DLEtBQ1pDLE9BQVVKLEVBQ1ZLLFlBQWUsR0FBSUMsUUFiM0JyQyxFQUFPc0MsS0FBTyxJQUNkLElBQUlDLEdBQVcsV0FDZixLQUFJQyxFQUNBLEdBQUlBLEdBQVMsQ0FDakIsS0FBSyxHQUFJQyxHQUFFLEVBQU8sR0FBSkEsRUFBUUEsSUFDbEJELEdBQVVELEVBQVNHLE9BQU9DLEtBQUtDLE1BQU1ELEtBQUtFLFNBQVdOLEVBQVNPLFFBRS9ETixJQUNDUixTQUFTZSxTQUFTUCxHQVF0QnhDLEVBQU9nRCxRQUFVLFdBQ1RoRCxFQUFPc0MsTUFDWFIsRUFBYTlCLEVBQU9zQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyduZ0FuaW1hdGUnXSk7XG4gICAgYXBwLmNvbnRyb2xsZXIoXCJUYWJDb250cm9sbGVyXCIsWyckc2NvcGUnLCAgZnVuY3Rpb24gKCRzY29wZSkge1xuXG4gICAgICAgICRzY29wZS5waG9uZVNjcmVlbnMgPSBbe1xuICAgICAgICAgICAgdGl0bGU6IFwiQWJvdXRcIixcbiAgICAgICAgICAgIGltZzogXCJpbWcvMS5wbmdcIixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFtbGdhbSBpcyBhIG1lc3NhZ2luZyBhcHAgdGhhdCBjb25uZWN0cyB1c2VyIHdpdGggaGlzIGxvdmVseSBtZXNzZW5nZXJzLlwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIlN3aXRjaGluZ1wiLFxuICAgICAgICAgICAgaW1nOiBcImltZy8yLnBuZ1wiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiV2Ugd2FudCBBbWxnYW0gdG8gYmUgc2ltcGxlIGZvciBldmVyeWJvZHkuIFNvIG5vdyBzd2l0Y2hpbmcgaXMgMiB0YXBzLCBubyBtb3JlLlwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIkN1c3RvbSBhbnN3ZXJzXCIsXG4gICAgICAgICAgICBpbWc6IFwiaW1nLzMucG5nXCIsXG5cbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlRvIGJlIGNvbXBldGl0aXZlIGlzIHRvIGJlIGZhc3QuIE5vdyB5b3UgY2FuIHVzZSB5b3VyIGN1c3RvbSBtZXNzYWdlcyBmb3IgYW5zd2VyaW5nLlwiXG4gICAgICAgIH1dO1xuICAgICAgICAkc2NvcGUuZGlyZWN0aW9uID0gJ2xlZnQnO1xuICAgICAgICAkc2NvcGUuY3VycmVudEluZGV4ID0gMDtcblxuICAgICAgICAkc2NvcGUuc2V0Q3VycmVudFNsaWRlSW5kZXggPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICRzY29wZS5kaXJlY3Rpb24gPSAoaW5kZXggPiAkc2NvcGUuY3VycmVudEluZGV4KSA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gICAgICAgICAgICAkc2NvcGUuY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLmlzQ3VycmVudFNsaWRlSW5kZXggPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAkc2NvcGUuY3VycmVudEluZGV4ID09PSBpbmRleDtcbiAgICAgICAgfTtcblxuICAgICAgICB9XSlcbiAgICAgICAgLmFuaW1hdGlvbignLnNsaWRlLWFuaW1hdGlvbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB3aWR0aCA9MDtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgICAgICAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDcxMClcbiAgICAgICAgICAgICAgICB3aWR0aCA9IDI4MTtcbiAgICAgICAgICAgIGVsc2Ugd2lkdGggPSAyMzQ7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGJlZm9yZUFkZENsYXNzOiBmdW5jdGlvbiAoZWxlbWVudCwgY2xhc3NOYW1lLCBkb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzY29wZSA9IGVsZW1lbnQuc2NvcGUoKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09ICduZy1oaWRlJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbmlzaFBvaW50ID0gZWxlbWVudC5wYXJlbnQoKS53aWR0aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoc2NvcGUuZGlyZWN0aW9uICE9PSAncmlnaHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluaXNoUG9pbnQgPSAtZmluaXNoUG9pbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBUd2Vlbk1heC5mcm9tVG8oZWxlbWVudCwgMC41LCB7bGVmdDowfSwge2xlZnQ6IC13aWR0aCxcInotaW5kZXhcIjotMywgb25Db21wbGV0ZTogZG9uZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uIChlbGVtZW50LCBjbGFzc05hbWUsIGRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNjb3BlID0gZWxlbWVudC5zY29wZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjbGFzc05hbWUgPT0gJ25nLWhpZGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUNsYXNzKCduZy1oaWRlJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydFBvaW50ID0gZWxlbWVudC5wYXJlbnQoKS53aWR0aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYoc2NvcGUuZGlyZWN0aW9uID09PSAncmlnaHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRQb2ludCA9IC1zdGFydFBvaW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgVHdlZW5NYXguZnJvbVRvKGVsZW1lbnQsIDAuNSwgeyBsZWZ0OiB3aWR0aCxcInotaW5kZXhcIjotMiB9LCB7bGVmdDogMCwgb25Db21wbGV0ZTogZG9uZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuXG4gICAgYXBwLmNvbnRyb2xsZXIoXCJFbWFpbENvbnRyb2xsZXJcIiwgWyckc2NvcGUnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XG4gICAgICAgICRzY29wZS51c2VyID0gbnVsbDtcbiAgICAgICAgdmFyIHBvc3NpYmxlID0gXCIxMjM0NTY3ODlcIjtcbiAgICAgICAgaWYoIXVuaXF1ZSlcbiAgICAgICAgICAgIHZhciB1bmlxdWUgPSAwO1xuICAgICAgICBmb3IoIHZhciBpPTA7IGkgPCAxMDsgaSsrICl7XG4gICAgICAgICAgICB1bmlxdWUgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmKHVuaXF1ZSkge1xuICAgICAgICAgICAgbWl4cGFuZWwuaWRlbnRpZnkodW5pcXVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzZW5kTWl4UGFuZWwobmV3VXNlcikge1xuICAgICAgICAgICAgbWl4cGFuZWwucGVvcGxlLnNldCh7XG4gICAgICAgICAgICAgICAgXCIkZW1haWxcIjogbmV3VXNlcixcbiAgICAgICAgICAgICAgICBcIiRsYXN0X2xvZ2luXCI6IG5ldyBEYXRlKClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgICRzY29wZS5hZGRVc2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZighJHNjb3BlLnVzZXIpIHJldHVybjtcbiAgICAgICAgICAgIHNlbmRNaXhQYW5lbCgkc2NvcGUudXNlcik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH07XG4gICAgfV0pO1xuXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
